plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
//	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'(
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
//	implementation 'ch.qos.logback:logback-classic:1.4.5'
//	implementation 'org.slf4j:slf4j-api:1.7.36'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
//	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
//	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.3.5'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.batch:spring-batch-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

tasks.named('test') {
	useJUnitPlatform()
}
